<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.jsls9.oajsfx.dao.RoleDao">
  <resultMap id="BaseResultMap" type="top.jsls9.oajsfx.model.Role">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="level" jdbcType="INTEGER" property="level" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, description, `status`, `level`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=VARCHAR}
    and status = 0
  </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from role
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="top.jsls9.oajsfx.model.Role" useGeneratedKeys="true">
    insert into role (`name`, description)
    values (#{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="top.jsls9.oajsfx.model.Role" useGeneratedKeys="true">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="top.jsls9.oajsfx.model.Role">
    update role
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.jsls9.oajsfx.model.Role">
    update role
    set `name` = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="queryRoleByUserName" resultMap="BaseResultMap">
        select r.id, r.name, r.description from user u
        left join user_role us on u.id = us.user_id
        left join role r on us.role_id = r.id
        where u.username=#{userName} and u.state = 0 and r.status = 0
  </select>
  <select id="getRoleList" resultType="top.jsls9.oajsfx.model.Role">
        select id, name, description, status, level  from role
        where status = 0 order by level asc
  </select>


  <insert id="addRole" keyColumn="id" parameterType="top.jsls9.oajsfx.model.Role">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      SELECT uuid()
    </selectKey>
    insert into role (id,`name`, description, `status`, `level`)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 0, #{level,jdbcType=INTEGER})
  </insert>

  <!-- 逻辑删 -->
  <update id="delRoleById" parameterType="top.jsls9.oajsfx.model.Role">
    update role
    set `status` = 1
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="getRoleByUserId" resultMap="BaseResultMap">
    select
    r.id,r.name, r.description, r.status, r.level
    from role r
    left join user_role ur on r.id = ur.role_id
    left join user u on ur.user_id = u.id
    where u.id = #{userId, jdbcType=VARCHAR}
    and u.state = 0
    and r.status = 0
  </select>

  <select id="getRoleTopLevelByUserId" resultType="java.lang.String">
    select distinct r.level from role r
    left join user_role ur on r.id = ur.role_id
    left join user u on ur.user_id = u.id
    where u.id = #{userId, jdbcType=VARCHAR}
      and u.state = 0
      and r.status = 0
  </select>

  <select id="getRoleListByRoleLevel" resultMap="BaseResultMap">
    select distinct <include refid="Base_Column_List" />
    from role r
    where r.status = 0
     <![CDATA[
        AND r.level > #{topLevelByUserId, jdbcType=VARCHAR}
      ]]>
  </select>

</mapper>