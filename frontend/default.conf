server {
    listen       8082;
    server_name  localhost; # This will be the server_name within the Docker network

    charset utf-8;

    # Optional: Define access and error logs if needed within the container
    # access_log  /var/log/nginx/host.access.log  main;
    # error_log   /var/log/nginx/error.log debug;

    location / {
        root   /usr/share/nginx/html; # Serve static files from where they are cloned in the Docker image
        index  index.html index.htm;
        try_files $uri $uri/ /index.html; # Important for single-page applications (SPA) if the frontend is one
    }

    location /api {
        proxy_set_header Host $host; # Use $host to preserve the original host header
        proxy_set_header X-Forwarded-Host $host; # Or $server_name if you prefer the internal one
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Proxy to the backend service. 'backend' is the service name in docker-compose.yml,
        # and 8081 is the port the backend application listens on.
        proxy_pass http://backend:8081/api/;

        # Optional: You might want to remove the 'root' and 'index' directives from /api location
        # as it's purely a proxy. If Spring Boot handles all /api/ paths, these are not needed here.
        # root   html;
        # index  index.html index.htm;

        # Error page handling can be complex with proxy.
        # The backend should ideally handle its own API error responses.
        # If you still want Nginx to intercept, ensure the error pages are accessible.
        # proxy_intercept_errors on;
        # error_page 404 500 502 503 504 =200 http://localhost:8082/login.html; # Check this path
    }

    # You can add other configurations like gzip compression here
    # gzip on;
    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
}
